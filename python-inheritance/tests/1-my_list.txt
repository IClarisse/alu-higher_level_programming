# 1-my_list.txt

# Test for the MyList class
# ==============================

# Import function from the module
>>> MyList = __import__('1-my_list').MyList

# Regular tests
# -------------
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

# Test with empty list
>>> my_list = MyList()
>>> my_list.print_sorted()
[]

# Test with negative numbers
>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(-4)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-5)
>>> my_list.print_sorted()
[-5, -4, -3, -2, -1]

# Test with mixed positive and negative numbers
>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(4)
>>> my_list.append(-2)
>>> my_list.append(3)
>>> my_list.append(-5)
>>> my_list.print_sorted()
[-5, -2, -1, 3, 4]

# Test with repeated numbers
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(2)
>>> my_list.append(1)
>>> my_list.print_sorted()
[1, 1, 1, 2, 2]

# Test with a single number
>>> my_list = MyList()
>>> my_list.append(5)
>>> my_list.print_sorted()
[5]

# Test inheritance
>>> my_list = MyList()
>>> isinstance(my_list, list)
True

# Test that print_sorted doesn't modify the original list
>>> my_list = MyList([3, 1, 2])
>>> id1 = id(my_list)
>>> my_list.print_sorted()
[1, 2, 3]
>>> id2 = id(my_list)
>>> id1 == id2
True
